name: Build & Push Docker Images with Trivy Security Scan

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  security-events: write
  actions: read
  contents: write   # changed from read → write to allow version commits

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      TRIVY_CACHE_DIR: ./.cache/trivy

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.SUBMODULES_TOKEN }}
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Download Trivy vulnerability database
        run: |
          trivy image --cache-dir "${TRIVY_CACHE_DIR}" --download-db-only

      # --- NEW: bump and record semantic version ---
      - name: Bump version
        id: bump_version
        run: |
          VERSION_FILE="VERSION"
          if [ ! -f "$VERSION_FILE" ]; then
            echo "0.0.0" > "$VERSION_FILE"
          fi
          VERSION=$(cat $VERSION_FILE)
          IFS='.' read -r major minor patch <<< "$VERSION"          
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push new version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add VERSION
          git commit -m "Bump version to ${{ steps.bump_version.outputs.version }}" || echo "No changes to commit"
          git push || echo "No changes to push"

      # --- Optional: create git tag for visibility ---
      - name: Create Git tag
        run: |
          git tag -a "v${{ steps.bump_version.outputs.version }}" -m "Release v${{ steps.bump_version.outputs.version }}" || true
          git push origin "v${{ steps.bump_version.outputs.version }}" || true

      - name: Build and push Docker images for all submodules
        run: |
          export TRIVY_REPORT_DIR="./trivy-reports"
          mkdir -p "$TRIVY_REPORT_DIR"
          VERSION=${{ steps.bump_version.outputs.version }}

          for dir in BusinessEntityMicroservice InventoryMicroservice PaymentService ReportMicroservice SalesMicroservice web-app user-management identity-access-management; do 
            if [ -f "$dir/Dockerfile" ]; then
              echo "📦 Building and pushing $dir."
              lower_dir=$(echo "$dir" | tr '[:upper:]' '[:lower:]')
              IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${lower_dir}"

              # build both versioned and latest tags
              docker build -t $IMAGE_NAME:$VERSION -t $IMAGE_NAME:latest $dir

              # Run Trivy scan (SARIF format)
              echo "🛡️ Scanning $dir with Trivy."
              REPORT_PATH="$TRIVY_REPORT_DIR/$dir.sarif"
              trivy image \
                --cache-dir "${TRIVY_CACHE_DIR}" \
                --format sarif \
                --output "$REPORT_PATH" \
                $IMAGE_NAME:$VERSION || echo "Trivy scan failed for $dir"

              # Run Trivy scan (JSON format)
              echo "🛡️ Scanning $dir with Trivy (JSON)."
              JSON_PATH="$TRIVY_REPORT_DIR/$dir.json"
              trivy image \
                --cache-dir "${TRIVY_CACHE_DIR}" \
                --format json \
                --output "$JSON_PATH" \
                $IMAGE_NAME:$VERSION || echo "Trivy JSON scan failed for $dir"

              echo "✅ Scanned $dir successfully. Reports saved at $REPORT_PATH"
              echo "🚀 Pushing images to Docker Hub..."
              docker push $IMAGE_NAME:$VERSION
              docker push $IMAGE_NAME:latest
              echo "Image Pushed: $IMAGE_NAME:$VERSION"
            else
              echo "⚠️ Skipping $dir (no Dockerfile found)"
            fi
          done

      - name: Run Trivy IaC Scan
        run: |
          echo "🛡️ Scanning OpenTofu IaC with Trivy."
          trivy config ./deploy \
            --cache-dir "${TRIVY_CACHE_DIR}" \
            --format sarif \
            --output ./trivy-reports/opentofu.sarif || echo "Trivy IaC scan failed"

      - name: Upload Trivy report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: ./trivy-reports/

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.sarifReportPaths=./trivy-reports/backend.sarif,./trivy-reports/identity-access-management.sarif,./trivy-reports/user-management.sarif,./trivy-reports/web-app.sarif,./trivy-reports/opentofu.sarif
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
