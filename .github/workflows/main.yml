name: Build & Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Determine changed submodules (with fallback)
      id: changes
      run: |
        BEFORE_SHA="${{ github.event.before }}"
        AFTER_SHA="${{ github.sha }}"

        echo "‚è≥ Checking for changes between commits:"
        echo "BEFORE: $BEFORE_SHA"
        echo "AFTER:  $AFTER_SHA"

        # Validate the before SHA (handles first-push edge case)
        if [ -z "$BEFORE_SHA" ] || ! git cat-file -e "$BEFORE_SHA^{commit}" 2>/dev/null; then
          echo "‚ö†Ô∏è 'before' SHA is missing or invalid. Falling back to HEAD~1"
          BEFORE_SHA=$(git rev-parse HEAD~1)
        fi

        CHANGED=$(git diff --name-only "$BEFORE_SHA" "$AFTER_SHA" | awk -F/ '{print $1}' | sort -u | uniq | xargs)

        echo "Detected changed directories: $CHANGED"
        echo "changed=$CHANGED" >> $GITHUB_OUTPUT

    - name: Debug changed paths
      run: echo "CHANGED DIRS = ${{ steps.changes.outputs.changed }}"

    - name: Build and push Docker images
      run: |
        for dir in ${{ steps.changes.outputs.changed }}; do
          if [ -f "$dir/Dockerfile" ]; then
            echo "üì¶ Building and pushing $dir..."
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$dir:latest $dir
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$dir:latest
          else
            echo "‚ö†Ô∏è Skipping $dir (no Dockerfile found)"
          fi
        done