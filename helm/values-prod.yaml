global:  
  protocol: "http"
  rootHost: "app.retailpulse.dev"
  rootURL: "https://app.retailpulse.dev"
  webURL: "https://app.retailpulse.dev"   
  namespace: ns-retailpulse
  
  # Database Secrets Reference Names
  userDBRef: "auth-db-secret"
  beDBRef: "be-db-secret"
  inventoryDBRef: "inventory-db-secret"
  salesDBRef: "sales-db-secret"
  reportDBRef: "docdb"
  paymentDBRef: "payment-db-secret"

  autoReleaseName: 1
  iamPort: 8081
  userPort: 8082
  bePort: 8083
  inventoryPort: 8084
  paymentPort: 8087
  kafkaPort: 9092
  kafkaPaymentTopic: "payment-events"

  # Backend service DNS (internal)
  iamInternalService: "rp-iam-app-svc:8081/auth" 
  userInternalService: "rp-user-app-svc:8082/"
  businessEntityInternalService: "rp-businessentity-app-svc:8083/"
  inventoryInternalService: "rp-inventory-app-svc:8084/"
  salesInternalService: "rp-sales-app-svc:8085/"
  reportInternalService: "rp-report-app-svc:8086/"
  paymentInternalService: "rp-payment-app-svc:8087/"

  # Backend service DNS (external)
  iamExternalService: "https://app.retailpulse.dev/auth"
  userExternalService: "https://app.retailpulse.dev/"
  businessEntityExternalService: "https://app.retailpulse.dev/"
  inventoryExternalService: "https://app.retailpulse.dev/"
  salesExternalService: "https://app.retailpulse.dev/"
  reportExternalService: "https://app.retailpulse.dev/"
  paymentExternalService: "https://app.retailpulse.dev/"

kafka-stack:
  enabled: true
  kafka:
    enabled: true
    portType: ClusterIP
  ui:
    enabled: true
    portType: ClusterIP
    contextPath: /kafka-ui
    ingress:
      enabled: true
      className: alb
      annotations:
        helm.sh/resource-policy: keep
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
        alb.ingress.kubernetes.io/backend-protocol: HTTP
        alb.ingress.kubernetes.io/group.name: retailpulse-api
        alb.ingress.kubernetes.io/group.order: "2"
        alb.ingress.kubernetes.io/healthcheck-path: /kafka-ui/actuator/health
        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:051826728851:certificate/6012df97-d861-4a1a-80a9-3675ecbf269d
      hosts:
      - host: app.retailpulse.dev
        paths:
        - path: /kafka-ui
          pathType: Prefix
          backend:
            service:
              name: retailpulse-rp-kafka-ui-svc
              port:
                number: 8095

web-app:
  app:
    enabled: true
    portType: ClusterIP
  ingress:
    enabled: true
    className: alb
    annotations:
      helm.sh/resource-policy: keep
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type:  ip
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
      alb.ingress.kubernetes.io/backend-protocol: HTTP
      alb.ingress.kubernetes.io/group.name: retailpulse-api
      alb.ingress.kubernetes.io/group.order: "10"
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:051826728851:certificate/6012df97-d861-4a1a-80a9-3675ecbf269d
    hosts:
    - host: app.retailpulse.dev
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: retailpulse-rp-web-svc
            port:
              number: "8080"
    tls: []

identity-access-management:
  app:
    enabled: true
    image: docker.io/casperyap/rp-iam-app:v0.2.0
    port: 8081
    urlPrefix: /auth
    portType: ClusterIP
  ingress:
    enabled: true
    className: alb
    annotations:
      helm.sh/resource-policy: keep
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
      alb.ingress.kubernetes.io/backend-protocol: HTTP
      alb.ingress.kubernetes.io/group.name: retailpulse-api
      alb.ingress.kubernetes.io/group.order: "2"
      alb.ingress.kubernetes.io/healthcheck-path: /auth/actuator/health
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:051826728851:certificate/6012df97-d861-4a1a-80a9-3675ecbf269d
    hosts:
    - host: app.retailpulse.dev
      paths:
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: retailpulse-rp-iam-app-svc
            port:
              number: 8081
      - path: /auth/.well-known
        pathType: Prefix
        backend:
          service:
            name: retailpulse-rp-iam-app-svc
            port:
              number: 8081
    tls: []

user-microservice:
  mysql:
    enabled: false
  app:
    enabled: true
    image: docker.io/casperyap/rp-user-app:v0.2.0
    port: 8082
    portType: ClusterIP

business-entity-microservice: 
  mysql:
    enabled: false
  app:
    enabled: true
    replicaCount: 3
    image: docker.io/casperyap/rp-businessentity-app:v0.2.0
    port: 8083
    portType: ClusterIP

inventory-microservice:
  mysql:
    enabled: false
  app:
    enabled: true
    image: docker.io/casperyap/rp-inventory-app:v0.2.0
    port: 8084
    portType: ClusterIP

sales-microservice:  
  mysql:
    enabled: false
  app:
    enabled: true
    image: docker.io/casperyap/rp-sales-app:v0.2.0
    port: 8085
    portType: ClusterIP

report-microservice:  
  mongodb:
    enabled: false
  app:
    enabled: true
    image: docker.io/casperyap/rp-report-app:v0.2.0
    port: 8086
    portType: ClusterIP

payment-microservice:  
  mysql:
    enabled: false
  app:
    enabled: true
    image: docker.io/casperyap/rp-payment-app:v0.2.0
    port: 8087
    portType: ClusterIP

elk-stack:
  enabled: true
  elasticsearch:
    enabled: true
    storage:
      enabled: true
      size: 2Gi
      storageClass: "gp3"
  kibana:
    enabled: true
    serverBasePath: "/elk-logs"
    serverRewriteBasePath: true
    elasticsearchHosts:
    - "http://elasticsearch:9200"
    env:   
    - name: NODE_OPTIONS
      value: "--max-old-space-size=1536"
    service:
      type: ClusterIP
      nodePort: 30601
    ingress:
      enabled: true
      ingressClassName: alb
      annotations:
        helm.sh/resource-policy: keep
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
        alb.ingress.kubernetes.io/backend-protocol: HTTP
        alb.ingress.kubernetes.io/group.name: retailpulse-api
        alb.ingress.kubernetes.io/group.order: "1"
        alb.ingress.kubernetes.io/healthcheck-path: /elk-logs/api/status
        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:051826728851:certificate/6012df97-d861-4a1a-80a9-3675ecbf269d
      hosts:
        - host: app.retailpulse.dev
          paths:
            - path: /elk-logs
              pathType: Prefix
              backend:
              service:
                name: kibana
                port:
                  number: 5601
      tls: []

apiIngress:
  enabled: true
  className: alb
  annotations:
    helm.sh/resource-policy: keep
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/group.name: retailpulse-api
    alb.ingress.kubernetes.io/group.order: "3"
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:051826728851:certificate/6012df97-d861-4a1a-80a9-3675ecbf269d
  hosts:
  - host: app.retailpulse.dev
    paths:
    - path: /api/users
      pathType: Prefix
      backend:
        service:
          name: retailpulse-rp-user-app-svc
          port:
            number: 8082
    - path: /api/businessEntity
      pathType: Prefix
      backend:
        service:
          name: retailpulse-rp-businessentity-app-svc
          port:
            number: 8083
    - path: /api/products
      pathType: Prefix
      backend:
        service:
          name: retailpulse-rp-inventory-app-svc
          port:
            number: 8084
    - path: /api/inventory
      pathType: Prefix
      backend:
        service:
          name: retailpulse-rp-inventory-app-svc
          port:
            number: 8084
    - path: /api/inventoryTransaction
      pathType: Prefix
      backend:
        service:
          name: retailpulse-rp-inventory-app-svc
          port:
            number: 8084    
    - path: /api/sales
      pathType: Prefix
      backend:
        service:
          name: retailpulse-rp-sales-app-svc
          port:
            number: 8085
    - path: /api/reports
      pathType: Prefix
      backend:
        service:
          name: retailpulse-rp-report-app-svc
          port:
            number: 8086
    - path: /api/payments
      pathType: Prefix
      backend:
        service:
          name: retailpulse-rp-payment-app-svc
          port:
            number: 8087
  tls: []