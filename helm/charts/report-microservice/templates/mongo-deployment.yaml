{{- if .Values.mongodb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-rp-report-mongodb-deploy" .Release.Name }}
  namespace: {{ include "report.namespace" . }}
  labels:
    {{- include "report.labels" . | nindent 4 }}
    app: {{ printf "%s-rp-report-mongodb-deploy" .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ printf "%s-rp-report-mongodb-deploy" .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-rp-report-mongodb-deploy" .Release.Name }}
    spec:
      containers:
        - name: mongo
          image: {{ .Values.mongodb.image }}
          args:
            - "--bind_ip_all"
            - "--auth"
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "report.mongodbSecret" . }}
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "report.mongodbSecret" . }}
                  key: MONGO_INITDB_ROOT_PASSWORD
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "report.mongodbSecret" . }}
                  key: MONGO_INITDB_DATABASE
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 30
            periodSeconds: 20
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: {{ printf "%s-rp-report-mongodb-pvc" .Release.Name }}
{{- end }}