{{- if .Values.mongodb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-rp-report-mongodb-deploy" .Release.Name }}
  namespace: {{ include "report.namespace" . }}
  labels:
    {{- include "report.labels" . | nindent 4 }}
    app: {{ printf "%s-rp-report-mongodb-deploy" .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ printf "%s-rp-report-mongodb-deploy" .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-rp-report-mongodb-deploy" .Release.Name }}
    spec:
      containers:
      - name: mongo
        image: {{ .Values.mongodb.image }}
        args:
        - "--bind_ip_all"
        - "--auth"        
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "report.mongodbSecret" . }}
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "report.mongodbSecret" . }}
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ include "report.mongodbSecret" . }}
              key: MONGO_DB
        - name: MONGO_PORT
          valueFrom:
            secretKeyRef:
              name: {{ include "report.mongodbSecret" . }}
              key: MONGO_PORT
        ports:
        - containerPort: {{ .Values.mongodb.port }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.mongodb.port }}
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: {{ .Values.mongodb.port }}
          initialDelaySeconds: 30
          periodSeconds: 20
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: {{ printf "%s-rp-report-mongodb-pvc" .Release.Name }}
{{- end }}