{{- if .Values.app.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-rp-report-app-deploy" .Release.Name }}
  namespace: {{ include "report.namespace" . }}
  labels:
    {{- include "report.labels" . | nindent 4 }}
    app: {{ printf "%s-rp-report-app-deploy" .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ printf "%s-rp-report-app-deploy" .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-rp-report-app-deploy" .Release.Name }}
    spec:
      initContainers:
      - name: wait-for-mongodb
        image: busybox
        command: ['sh', '-c']
        args:
          - >            
            until nc -z ${MONGO_HOST} ${MONGO_PORT}; do
              echo "Waiting for MongoDB at ${MONGO_HOST}:${MONGO_PORT}..."
              sleep 2;
            done &&
            echo "MongoDB is up!"
        envFrom:
          - secretRef:
              {{- if and (hasKey .Values "global") (hasKey .Values.global "reportDBRef") (ne .Values.global.reportDBRef "") }}
              name: {{ .Values.global.reportDBRef }}
              {{- else }}
              name: {{ include "report.mongodbSecret" . }}
              {{- end }}
      {{- if and (hasKey .Values "global") (hasKey .Values.global "reportDBRef") (ne .Values.global.reportDBRef "") }}
      - name: import-docdb-cert
        image: eclipse-temurin:23-jdk
        command:
        - sh
        - -c
        - |
          # Split the AWS DocDB bundle into individual PEMs and import ALL of them into the JVM truststore
          awk 'BEGIN{c=0}/BEGIN CERTIFICATE/{c++}{print > ("/tmp/ca" c ".pem")}' /aws-docdb-ca/global-bundle.pem
          for f in /tmp/ca*.pem; do
            keytool -importcert -noprompt \
              -alias aws-docdb-$(basename "$f" .pem) \
              -file "$f" \
              -keystore /truststore/truststore.jks \
              -storepass changeit
          done
        volumeMounts:
        - name: aws-docdb-ca
          mountPath: /aws-docdb-ca
        - name: truststore
          mountPath: /truststore
        {{- end }}
      containers:
      - name: rp-report-service
        image: {{ .Values.app.image }}
        imagePullPolicy: {{ .Values.app.imagePullPolicy }}
        ports:
          - containerPort: {{ .Values.app.port }}
        envFrom:
        - secretRef:
            {{- if and (hasKey .Values "global") (hasKey .Values.global "reportDBRef") (ne .Values.global.reportDBRef "") }}
            name: {{ .Values.global.reportDBRef }}
            {{- else }}
            name: {{ include "report.mongodbSecret" . }}
            {{- end }}
        env:
        # Make Spring read /config/application.yaml
        - name: SPRING_CONFIG_ADDITIONAL_LOCATION
          value: "file:/config/"
        # Override URI from configmap for clarity and direct control
        - name: SPRING_DATA_MONGODB_URI
          {{- if and (hasKey .Values "global") (hasKey .Values.global "reportDBRef") (ne .Values.global.reportDBRef "") }}          
          value: "mongodb://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}?tls=true&authSource=admin"
          {{- else }}
          value: "mongodb://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}?authSource=admin"
          {{- end }}
        {{- if and (hasKey .Values "global") (hasKey .Values.global "reportDBRef") (ne .Values.global.reportDBRef "") }}
        - name: JAVA_TOOL_OPTIONS
          value: "-Djavax.net.ssl.trustStore=/truststore/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"
        {{- end }}        
        - name: SERVER_PORT
          value: {{ .Values.app.port | quote }}        
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: {{ .Values.app.port }}
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: {{ .Values.app.port }}
          initialDelaySeconds: 30
          periodSeconds: 5
        resources: {}
        volumeMounts:
        - name: app-config
          mountPath: /config
        {{- if and (hasKey .Values "global") (hasKey .Values.global "reportDBRef") (ne .Values.global.reportDBRef "") }}
        - name: aws-docdb-ca
          mountPath: /aws-docdb-ca
        - name: truststore
          mountPath: /truststore
        {{- end }}
      volumes:
      - name: app-config
        configMap:
          name: {{ printf "%s-rp-report-app-cm" .Release.Name }}
          items:
            - key: application.yaml
              path: application.yaml
      {{- if and (hasKey .Values "global") (hasKey .Values.global "reportDBRef") (ne .Values.global.reportDBRef "") }}
      - name: aws-docdb-ca
        secret:
          secretName: aws-docdb-ca
      - name: truststore
        emptyDir: {}
      {{- end }}
{{- end }}