{{- if .Values.app.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-rp-payment-app-deploy" .Release.Name }}
  namespace: {{ .Values.namespace | default "ns-retailpulse" }}
  labels:
    {{- include "payment.labels" . | nindent 4 }}
    app: {{ printf "%s-rp-payment-app-deploy" .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ printf "%s-rp-payment-app-deploy" .Release.Name }}
  strategy: {}
  template:
    metadata:
      labels:
        app: {{ printf "%s-rp-payment-app-deploy" .Release.Name }}
    spec:
      initContainers: # Wait for MySQL Service to be reachable
        - name: wait-for-mysql
          image: busybox:1.35
          command:
            - sh
            - -c
            - >
              until nc -z {{ printf "%s-rp-payment-sql-svc" .Release.Name }} 3306; do
                echo "Waiting for MySQL at {{ printf "%s-rp-payment-sql-svc" .Release.Name }}:3306...";
                sleep 5;
              done;
              echo "MySQL is ready!";
          env:
            - name: MYSQL_HOST
              value: {{ printf "%s-rp-payment-sql-svc" .Release.Name }}
            - name: MYSQL_PORT
              value: "3306"
      containers:
        - image: {{ .Values.app.image | default "rp-payment-app:v0.1.0" }}
          name: {{ printf "%s-rp-payment-app-pod" .Release.Name }}
          imagePullPolicy: {{ .Values.app.imagePullPolicy | default "Always" }}
          env:
            # Inject Stripe secrets
            - name: STRIPE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-rp-payment-app-secret" .Release.Name }}
                  key: STRIPE_API_KEY
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-rp-payment-app-secret" .Release.Name }}
                  key: STRIPE_WEBHOOK_SECRET
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
          ports:
            - containerPort: {{ .Values.app.port | default 8087 }}
          envFrom:
            - secretRef:
                name: core-db
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health # Adjust if different
          #     port: {{ .Values.app.port | default 8087 }}
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health # Adjust if different
          #     port: {{ .Values.app.port | default 8087 }}
          #   initialDelaySeconds: 20
          #   periodSeconds: 5
          resources: {}
      volumes:
        - name: config-volume
          configMap:
            name: {{ printf "%s-rp-payment-app-cm" .Release.Name }}
{{- end }}            