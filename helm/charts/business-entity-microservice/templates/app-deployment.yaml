{{- if .Values.app.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-rp-businessentity-app-deploy" .Release.Name }} 
  namespace: {{ include "business-entity-microservice.namespace" . }}
  labels:
    {{- include "business-entity-microservice.labels" . | nindent 4 }}
    app: {{ printf "%s-rp-businessentity-app-deploy" .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ printf "%s-rp-businessentity-app-deploy" .Release.Name }}
  strategy: {}
  template:
    metadata:
      labels:
        app: {{ printf "%s-rp-businessentity-app-deploy" .Release.Name }}
    spec:
      initContainers:
        # Wait for MySQL Service to be reachable
        - name: wait-for-mysql
          image: busybox:1.35
          command:
            - sh
            - -c
            - >
              until nc -z {{ printf "%s-rp-businessentity-sql-svc" .Release.Name }} 3306; do
                echo "Waiting for MySQL at {{ printf "%s-rp-businessentity-sql-svc" .Release.Name }}:3306...";
                sleep 5;
              done;
              echo "MySQL is ready!";
          env:
            - name: MYSQL_HOST
              value: {{ printf "%s-rp-businessentity-sql-svc" .Release.Name }}
            - name: MYSQL_PORT
              value: "3306"

        # Wait for Redis Service to be reachable
        - name: wait-for-redis
          image: redis:7.2
          command:
            - sh
            - -c
            - >
              until redis-cli -h {{ printf "%s-rp-businessentity-redis-svc" .Release.Name }}  -p 6379 -a $$REDIS_PASSWORD ping; do
                echo "Waiting for Redis at {{ printf "%s-rp-businessentity-redis-svc" .Release.Name }}:6379...";
                sleep 5;
              done;
              echo "Redis is ready!";
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-rp-businessentity-redis-secret" .Release.Name }}
                  key: REDIS_PASSWORD
            - name: REDIS_HOST
              value: {{ printf "%s-rp-businessentity-redis-svc" .Release.Name }}
            - name: REDIS_PORT
              value: "6379"

      containers:
        - image: {{ .Values.app.image }}
          name: {{ printf "%s-rp-businessentity-app-pod" .Release.Name }}
          imagePullPolicy: {{ .Values.app.imagePullPolicy }}
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-rp-businessentity-redis-secret" .Release.Name }}
                  key: REDIS_PASSWORD
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
          ports:
            - containerPort: {{ .Values.app.port }}
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: {{ .Values.app.port }}
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: {{ .Values.app.port }}
          #   initialDelaySeconds: 20
          #   periodSeconds: 5
          resources: {}
      volumes:
        - name: config-volume
          configMap:
            name: {{ printf "%s-rp-businessentity-app-cm" .Release.Name }}
{{- end }}